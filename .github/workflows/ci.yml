name: CI/CD Pipeline

on:
  push:
    branches: [ master, staging, release/* ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master, staging, release/* ]
  release:
    types: [ published ]

permissions:
  contents: write
  packages: write

env:
  GO_VERSION: '1.21'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Show commit info
        run: git rev-parse HEAD && git branch
      - name: Debug: Print table.go
        run: cat pkg/report/table.go
      - name: Clean Go Build Cache
        run: go clean -cache -testcache -modcache

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Run linting
        run: |
          go install golang.org/x/lint/golint@latest
          golint -set_exit_status ./...

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.21']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Show commit info
        run: git rev-parse HEAD && git branch
      - name: Debug: Print table.go
        run: cat pkg/report/table.go
      - name: Clean Go Build Cache
        run: go clean -cache -testcache -modcache

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: go mod download

      - name: Build
        run: go build -o bugzora .

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bugzora-${{ matrix.os }}
          path: bugzora*

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Show commit info
        run: git rev-parse HEAD && git branch
      - name: Debug: Print table.go
        run: cat pkg/report/table.go
      - name: Clean Go Build Cache
        run: go clean -cache -testcache -modcache

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '0'
          severity: 'CRITICAL,HIGH'

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, build, security-scan]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Show commit info
        run: git rev-parse HEAD && git branch
      - name: Debug: Print table.go
        run: cat pkg/report/table.go
      - name: Clean Go Build Cache
        run: go clean -cache -testcache -modcache

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 